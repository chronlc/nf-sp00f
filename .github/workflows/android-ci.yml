name: Android CI/CD

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x android-app/gradlew

      - name: Run code quality checks
        run: |
          cd android-app
          ./gradlew ktlintCheck detekt --continue
        continue-on-error: true

      - name: Build debug APK
        run: |
          cd android-app
          ./gradlew assembleDebug

      - name: Run unit tests
        run: |
          cd android-app
          ./gradlew testDebugUnitTest
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nf-sp00f-debug-apk
          path: android-app/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            android-app/app/build/reports/tests/
            android-app/app/build/test-results/
          retention-days: 7

  audit:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Run codebase audit
        run: |
          if [ -f scripts/audit_codebase.py ]; then
            python3 scripts/audit_codebase.py || echo "Audit completed with warnings"
          else
            echo "Audit script not found, skipping..."
          fi

      - name: Run naming audit
        run: |
          if [ -f scripts/naming_auditor.py ]; then
            python3 scripts/naming_auditor.py || echo "Naming audit completed with warnings"
          else
            echo "Naming audit script not found, skipping..."
          fi

  security-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "android-app"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  release:
    runs-on: ubuntu-latest
    needs: [build, audit, security-scan]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build release APK
        run: |
          cd android-app
          chmod +x gradlew
          ./gradlew assembleRelease

      - name: Sign APK
        if: env.KEYSTORE_BASE64 != ''
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "Signing APK with provided keystore..."
          # Add APK signing logic here if keystore is available

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: nf-sp00f33r Release v${{ github.run_number }}
          body: |
            ðŸ”¥ **nf-sp00f33r EMV Research Platform**

            **Changes in this release:**
            - Latest Android 14+ Material3 build
            - Pure Jetpack Compose UI (no fragments)
            - EMV attack emulation system
            - NFC card reading with workflows
            - HCE emulation capabilities

            **Installation:**
            1. Download `nf-sp00f-release.apk`
            2. Enable "Unknown sources" in Android settings
            3. Install and grant NFC permissions

            **Requirements:**
            - Android 8.0+ (API 26+, optimized for Android 14)
            - NFC-enabled device
            - For research and educational purposes only
          files: |
            android-app/app/build/outputs/apk/release/app-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
